/* Stemmer for the Ukrainian language
 *
 * Author: Roman Kobzar, 2017
 * https://github.com/Tapkomet/UAStemming
 * 3-Clause BSD licence
*/

stringescapes {}

/* the 33 Ukrainian letters and apostrophe represented by single quote*/

stringdef a    hex '430'
stringdef b    hex '431'
stringdef v    hex '432'
stringdef gh   hex '433'
stringdef g    hex '491'
stringdef d    hex '434'
stringdef e    hex '435'
stringdef ye   hex '454'
stringdef zh   hex '436'
stringdef z    hex '437'
stringdef y    hex '438'
stringdef i    hex '456'
stringdef yi   hex '457'
stringdef i`   hex '439'
stringdef k    hex '43A'
stringdef l    hex '43B'
stringdef m    hex '43C'
stringdef n    hex '43D'
stringdef o    hex '43E'
stringdef p    hex '43F'
stringdef r    hex '440'
stringdef s    hex '441'
stringdef t    hex '442'
stringdef u    hex '443'
stringdef f    hex '444'
stringdef kh   hex '445'
stringdef ts   hex '446'
stringdef ch   hex '447'
stringdef sh   hex '448'
stringdef shch hex '449'
stringdef soft hex '44C'
stringdef iu   hex '44E'
stringdef ia   hex '44F'
stringdef apostrophe hex '27'

routines ( exception1
           adjective
           postfix
           verb
           noun
           tidy_up
)

externals ( stem )

define exception1 as (

    [substring] atlimit among(
		
		'{z}{d}{o}{r}{o}{v}{apostrophe}{ia}'      (<-'{z}{d}{o}{r}')
        /* invariant forms: */
		'{k}{r}{i}{m}'
		'{a}{d}{zh}{e}'
		'{a}{t}{o}{m}'
		'{k}{r}{o}{k}'
		'{d}{e}{s}{soft}'
		'{v}{i}{s}{soft}'
        // ... extensions possible here ...
    )
)


backwardmode (


    define adjective as (
	
        [substring] among (
			
			'{o}{v}{e}' '{o}{v}{a}' '{o}{v}{o}' '{o}{v}{y}{i`}'
			'{o}{v}{y}{m}' '{o}{v}{y}{kh}' '{o}{v}{o}{gh}{o}'
			'{o}{v}{o}{m}{u}' '{o}{v}{o}{iu}' '{o}{v}{o}{yi}'
			'{o}{v}{i}{i`}' '{y}{m}{y}'
            '{e}{i`}' '{i}{i`}' '{y}{i`}' '{o}{yi}' '{e}{m}' '{i}{m}'
            '{y}{m}' '{o}{m}' '{o}{gh}{o}' '{e}{m}{u}'
            '{o}{m}{u}' '{i}{kh}' '{y}{kh}' '{u}{iu}' '{iu}{iu}' '{a}{ia}'
            '{o}{iu}' '{e}{iu}'
                (delete)
        )
    )


    define postfix as (
        [substring] among (
            '{s}{ia}'
            '{s}{soft}'
                (delete)
        )
    )

    define verb as (
        [substring] among (
			'{sh}{o}{v}' '{sh}{l}{a}' '{sh}{l}{y}' '{sh}{l}{o}' (<-'{t}') 
			'{u}{iu}{t}{soft}' '{a}{iu}{t}{soft}' '{i}{iu}{t}{soft}' '{y}{v}{sh}{y}'
			'{a}{n}{y}{m}{y}' '{a}{n}{y}{kh}' '{a}{n}{i}' '{y}{v}'
            '{i}{l}{a}' '{y}{l}{a}' '{y}{l}{y}' '{y}{t}{a}' '{e}{n}{a}'
            '{u}{i`}{t}{e}' '{u}{v}{a}{l}{y}' '{u}{v}{a}{l}{o}'
			'{u}{v}{a}{l}{a}' '{u}{v}{a}{v}' '{u}{v}{a}{t}{y}' '{u}{v}{a}{n}{n}{ia}'
			'{a}{l}{y}' '{a}{l}{o}' '{a}{l}{a}' '{a}{v}' '{y}{l}{i}'
            '{u}{i`}' '{a}{ye}' '{u}{ye}' '{i}{ye}' '{y}{ye}' '{ia}{ye}'
            '{i}{l}{o}' '{y}{l}{o}' '{e}{n}{o}' '{iu}{ye}'
            '{i}{t}{soft}' '{y}{t}{soft}'
			
                (delete)
        )
    )

    define noun as (
        [substring] among (
			'{ia}{t}{a}' '{ia}{t}{a}{m}' '{ia}{t}{a}{m}{y}' 
			('{n}' delete)
			'{o}{k}'      (<-'{k}')
			'{o}{yi}{v}' '{o}{ia}{kh}' '{o}{ye}{m}' '{o}{ia}' 
			'{i}{ia}{kh}' 
            '{a}' '{yi}{v}' '{o}{v}{i}' '{o}{v}' '{i}{v}' '{e}'
			'{ia}{t}' '{i}{l}' '{y}{l}' '{e}{n}' '{u}{iu}'
            '{i}{ia}{m}{y}' '{ia}{m}{y}' '{a}{m}{y}'
			'{i}{yi}' '{i}{ye}{iu}'
            '{i}' '{e}{i`}' '{e}{yi}' '{o}{i`}' '{i}{i`}' '{i`}'
            '{i}{ia}{m}' '{ia}{m}' '{e}{m}' '{a}{m}' '{o}{m}'
            '{o}' '{u}' '{a}{kh}' '{ia}{kh}' '{y}' '{soft}'
            '{i}{iu}' '{iu}' '{i}{ia}' '{ia}'
                (delete)
        )
    )


    define tidy_up as (
        [substring] among (
            '{n}'
               ('{n}' delete)
			'{t}'
               ('{t}' delete)			   //double suffixes
            '{soft}'
			'{i}{ch}{n}'
			'{i}{i`}{s}{soft}{k}'
			'{s}{soft}{k}'
			'{soft}{n}'
			'{e}{n}' '{a}{n}' '{y}{t}' '{iu}{iu}{t}'
			'{u}{ye}{t}' '{a}{ye}{t}' '{iu}{ye}{t}' '{ia}{ye}{t}' 
			'{apostrophe}'
               (delete)  
			    '{o}{s}{t}'      (<-'{i}{s}{t}')
        )
    )
)

define stem as (
	not hop 4 or (
	exception1 or
    backwards(
        do (
              try postfix
               adjective or verb or noun
        )
        do tidy_up
		)
	)
)
